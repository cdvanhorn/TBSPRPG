version: '3.3'
services:
  frontend:
    build: ./TBSPRPG_UI/tbsprpg
    ports:
      - '4200:4200'
    volumes:
      - './TBSPRPG_UI/tbsprpg:/app'
      - /app/node_modules
    command: ng serve --host 0.0.0.0 --port 4200
    depends_on:
      - publicapi

  publicapi:
    build: ./TBSPRPG_PAPI
    ports:
      - '8000:5000'
    volumes:
      - './TBSPRPG_PAPI/PublicApi:/app'
    environment:
      - 'JwtSettings__Secret=${JWTSECRET}'
    command: dotnet watch run
    depends_on: 
      - userapi
      - adventureapi
      - gameapi
      - mapapi
      - gamesystemapi
      - contentapi

  userapi:
    build: ./TBSPRPG_UserAPI
    ports:
      - '8001:8001'
    volumes:
      - './TBSPRPG_UserAPI/UserApi:/app'
    environment:
      - 'CONNECTION_STRING=User ID=${POSTGRESUSER};Password=${POSTGRESPASSWORD};Server=${POSTGRESURL};Port=5432;Database=tbsprpg_user;Integrated Security=true;Pooling=true;'
      - 'Database__Salt=${DBSALT}'
      - 'JwtSettings__Secret=${JWTSECRET}'
    command: dotnet watch run
    depends_on:
      - postgres

  adventureapi:
    build: ./TBSPRPG_AdventureAPI
    ports:
      - '8002:8002'
    volumes:
      - './TBSPRPG_AdventureAPI/AdventureApi:/app'
    environment:
      - 'CONNECTION_STRING=User ID=${POSTGRESUSER};Password=${POSTGRESPASSWORD};Server=${POSTGRESURL};Port=5432;Database=tbsprpg_adventure;Integrated Security=true;Pooling=true;'
      - 'JwtSettings__Secret=${JWTSECRET}'
    command: dotnet watch run
    depends_on:
      - postgres

  gameapi:
    build: ./TBSPRPG_GameAPI
    ports:
      - '8003:8003'
    volumes:
      - './TBSPRPG_GameAPI/GameApi:/app'
    environment:
      - 'CONNECTION_STRING=User ID=${POSTGRESUSER};Password=${POSTGRESPASSWORD};Server=${POSTGRESURL};Port=5432;Database=tbsprpg_game;Integrated Security=true;Pooling=true;'
      - 'JwtSettings__Secret=${JWTSECRET}'
    command: dotnet watch run
    depends_on:
      - postgres
      - eventstore

  mapapi:
    build: ./TBSPRPG_MapAPI
    ports:
      - '8004:8004'
    volumes:
      - './TBSPRPG_MapAPI/MapApi:/app'
    environment:
      - 'CONNECTION_STRING=User ID=${POSTGRESUSER};Password=${POSTGRESPASSWORD};Server=${POSTGRESURL};Port=5432;Database=tbsprpg_map;Integrated Security=true;Pooling=true;'
      - 'JwtSettings__Secret=${JWTSECRET}'
    command: dotnet watch run
    depends_on:
      - postgres
      - eventstore
      - adventureapi

  gamesystemapi:
    build: ./TBSPRPG_GameSystemAPI
    ports:
      - '8005:8005'
    volumes:
      - './TBSPRPG_GameSystemAPI/GameSystemApi:/app'
    environment:
      - 'CONNECTION_STRING=User ID=${POSTGRESUSER};Password=${POSTGRESPASSWORD};Server=${POSTGRESURL};Port=5432;Database=tbsprpg_gamesystem;Integrated Security=true;Pooling=true;'
      - 'JwtSettings__Secret=${JWTSECRET}'
    command: dotnet watch run
    depends_on:
      - postgres
      - eventstore
      - adventureapi

  contentapi:
    build: ./TBSPRPG_ContentAPI
    ports:
      - '8006:8006'
    volumes:
      - './TBSPRPG_ContentAPI/ContentApi:/app'
    environment:
      - 'CONNECTION_STRING=User ID=${POSTGRESUSER};Password=${POSTGRESPASSWORD};Server=${POSTGRESURL};Port=5432;Database=tbsprpg_content;Integrated Security=true;Pooling=true;'
      - 'JwtSettings__Secret=${JWTSECRET}'
    command: dotnet watch run
    depends_on:
      - postgres
      - eventstore
      - adventureapi
  
  postgres:
    image: postgres:12-alpine
    ports:
      - '5432:5432'
    volumes:
      - './postgres_data:/var/lib/postgresql/data'
    environment:
      - 'POSTGRES_PASSWORD=tbsprpg'

  eventstore:
    image: eventstore/eventstore:latest
    ports:
      - "2113:2113"
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
      - EVENTSTORE_MEM_DB=true

  frontend_node_modules:
    build: ./TBSPRPG_UI/tbsprpg
    ports:
      - '4200:4200'
    volumes:
      - './TBSPRPG_UI/tbsprpg:/app'
    command: npm install
